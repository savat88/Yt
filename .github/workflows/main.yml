name: Build yt-dlp .aar

on:
  workflow_dispatch: # กดรันเองได้
  push:
    branches: [ main ]

jobs:
  build-aar:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout workflow repo
      - name: Checkout workflow repo
        uses: actions/checkout@v4

      # 2️⃣ Clone yt-dlp
      - name: Clone yt-dlp
        run: |
          git clone https://github.com/yt-dlp/yt-dlp.git
          cd yt-dlp
          git submodule update --init --recursive

      # 3️⃣ Setup JDK + Android SDK
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 4️⃣ Generate Gradle wrapper (ถ้า yt-dlp ไม่มี Gradle)
      - name: Init Gradle Project
        run: |
          cd yt-dlp
          gradle init --type java-library

      # 5️⃣ สร้างโมดูล AAR
      - name: Create Android Library Module
        run: |
          cd yt-dlp
          mkdir -p library/src/main/java
          cat > settings.gradle <<'EOF'
          include ':library'
          rootProject.name = "yt-dlp-android"
          EOF

          cat > library/build.gradle <<'EOF'
          plugins {
              id 'com.android.library'
          }

          android {
              namespace "com.ytdlp.android"
              compileSdk 34

              defaultConfig {
                  minSdk 21
                  targetSdk 34
              }

              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_11
                  targetCompatibility JavaVersion.VERSION_11
              }
          }

          dependencies {
              // ใส่ dependency ของ yt-dlp ถ้ามี
          }
          EOF

      # 6️⃣ Build AAR
      - name: Build AAR
        run: |
          cd yt-dlp
          ./gradlew :library:assembleRelease

      # 7️⃣ Upload artifact
      - name: Upload AAR
        uses: actions/upload-artifact@v4
        with:
          name: yt-dlp-aar
          path: yt-dlp/library/build/outputs/aar/*.aar
