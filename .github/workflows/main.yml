name: Build libytdlp.so (Linux + Android)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git python3-pip clang cmake make pkg-config unzip wget patchelf build-essential
          python -m pip install --upgrade pip
          python -m pip install nuitka cython

      # 4Ô∏è‚É£ Download yt-dlp (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
      - name: Download yt-dlp
        run: |
          if [ ! -d "yt-dlp" ]; then
            git clone https://github.com/yt-dlp/yt-dlp.git
          fi

      # 5Ô∏è‚É£ Build Linux .so with Nuitka
      - name: Build Linux .so
        run: |
          cd yt-dlp
          python -m nuitka --module yt_dlp/__main__.py --jobs=2 --output-dir=build
          cd ..
          mkdir -p output
          SO_FILE=$(find yt-dlp/build -name "*.so" | head -n 1)
          if [ -f "$SO_FILE" ]; then
            cp "$SO_FILE" output/libytdlp-linux.so
            echo "Linux .so built successfully"
          else
            echo "Error: Linux .so file not found"
            exit 1
          fi

      # 6Ô∏è‚É£ Upload Linux artifact
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: libytdlp-linux-so
          path: output/libytdlp-linux.so

      # 7Ô∏è‚É£ Download Android NDK
      - name: Download Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r27-linux.zip
          unzip -q android-ndk-r27-linux.zip

      # 8Ô∏è‚É£ Build Python for Android (arm64-v8a) cross-compile - FIXED
      - name: Build Python for Android
        run: |
          mkdir -p python-android
          cd python-android
          
          # Build native python ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö build tools
          if [ ! -f "/usr/local/bin/python3.12" ]; then
            echo "Building native Python for build tools..."
            wget -q https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz
            tar -xzf Python-3.12.5.tgz
            cd Python-3.12.5
            ./configure --enable-optimizations --prefix=/usr/local
            make -j$(nproc)
            sudo make install
            cd ..
          fi
          
          # Download Python source ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cross-compile
          wget -q https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz
          tar -xzf Python-3.12.5.tgz
          cd Python-3.12.5
          
          # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cross-compile
          export NDK=$PWD/../../android-ndk-r27
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=21
          
          # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ compile flags
          export CC=$TOOLCHAIN/bin/$TARGET$API-clang
          export CXX=$TOOLCHAIN/bin/$TARGET$API-clang++
          export AR=$TOOLCHAIN/bin/llvm-ar
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export LD=$TOOLCHAIN/bin/ld
          export PATH=/usr/local/bin:$PATH
          
          # Configure ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö cross-compile ‡∏î‡πâ‡∏ß‡∏¢ --with-build-python
          PYTHON_FOR_BUILD=$(which python3.12 || which python3)
          echo "Using Python for build: $PYTHON_FOR_BUILD"
          
          ./configure \
            --host=$TARGET \
            --build=x86_64-pc-linux-gnu \
            --prefix=$PWD/../install \
            --enable-shared \
            --disable-ipv6 \
            --without-ensurepip \
            --with-build-python=$PYTHON_FOR_BUILD \
            ac_cv_file__dev_ptmx=yes \
            ac_cv_file__dev_ptc=no \
            ac_cv_have_long_long_format=yes
          
          make -j$(nproc)
          make install
          cd ../..

      # 9Ô∏è‚É£ Cross-compile yt-dlp to Android .so - FIXED
      - name: Build Android .so
        run: |
          export NDK=$PWD/android-ndk-r27
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=21
          
          # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå output ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
          mkdir -p output
          
          # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Python headers ‡πÅ‡∏•‡∏∞ libraries
          if [ ! -d "python-android/install/include" ]; then
            echo "Error: Python Android build not found"
            ls -la python-android/
            exit 1
          fi
          
          # Cross-compile ‡∏î‡πâ‡∏ß‡∏¢ CLANG
          $TOOLCHAIN/bin/$TARGET$API-clang -shared \
            -Ipython-android/install/include/python3.12 \
            -Lpython-android/install/lib \
            -lpython3.12 \
            yt-dlp/yt_dlp/__main__.py \
            -o output/libytdlp-android.so \
            -fPIC \
            -target aarch64-linux-android21 \
            -Wl,-rpath,\$ORIGIN
          
          # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á successfully
          if [ -f "output/libytdlp-android.so" ]; then
            echo "Android .so built successfully"
            file output/libytdlp-android.so
          else
            echo "Error: Android .so file not created"
            exit 1
          fi

      # üîü Upload Android artifact
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: libytdlp-android-so
          path: output/libytdlp-android.so

      # 1Ô∏è‚É£1Ô∏è‚É£ Verify both artifacts
      - name: Verify artifacts
        run: |
          echo "=== Linux .so ==="
          ls -la output/libytdlp-linux.so
          file output/libytdlp-linux.so || true
          
          echo "=== Android .so ==="
          ls -la output/libytdlp-android.so
          file output/libytdlp-android.so || true

      # 1Ô∏è‚É£2Ô∏è‚É£ Clean up NDK to save space
      - name: Clean up NDK
        run: |
          rm -rf android-ndk-r27
          rm -f android-ndk-r27-linux.zip
